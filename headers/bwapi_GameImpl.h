/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class bwapi_GameImpl */

#ifndef _Included_bwapi_GameImpl
#define _Included_bwapi_GameImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_GameImpl
 * Method:    onMatchStart_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_onMatchStart_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    onMatchEnd_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_onMatchEnd_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    onMatchFrame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_onMatchFrame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    _unitFromIndex_native
 * Signature: (JI)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl__1unitFromIndex_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getForces_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getForces_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getPlayers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getPlayers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getAllUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getAllUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getMinerals_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getGeysers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getGeysers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getNeutralUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getNeutralUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getStaticMinerals_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getStaticMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getStaticGeysers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getStaticGeysers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getStaticNeutralUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getStaticNeutralUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getBullets_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getBullets_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getNukeDots_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getNukeDots_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getForce_native
 * Signature: (JI)Lbwapi/Force;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getForce_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getPlayer_native
 * Signature: (JI)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getPlayer_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnit_native
 * Signature: (JI)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnit_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    indexToUnit_native
 * Signature: (JI)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_indexToUnit_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getRegion_native
 * Signature: (JI)Lbwapi/Region;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getRegion_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getGameType_native
 * Signature: (J)Lbwapi/GameType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getGameType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getLatency_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getLatency_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getFrameCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getFrameCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getReplayFrameCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getReplayFrameCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getFPS_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getFPS_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getAverageFPS_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_GameImpl_getAverageFPS_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getMouseState_native
 * Signature: (JLbwapi/MouseButton;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_getMouseState_1native__JLbwapi_MouseButton_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getMouseState_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_getMouseState_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getKeyState_native
 * Signature: (JLbwapi/Key;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_getKeyState_1native__JLbwapi_Key_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getKeyState_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_getKeyState_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    setScreenPosition_native
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setScreenPosition_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    setScreenPosition_native
 * Signature: (JLbwapi/Position;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setScreenPosition_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    pingMinimap_native
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_pingMinimap_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    pingMinimap_native
 * Signature: (JLbwapi/Position;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_pingMinimap_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnitsOnTile_native
 * Signature: (JII)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnitsOnTile_1native
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnitsInRectangle_native
 * Signature: (JIIII)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnitsInRectangle_1native__JIIII
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnitsInRectangle_native
 * Signature: (JLbwapi/Position;Lbwapi/Position;)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnitsInRectangle_1native__JLbwapi_Position_2Lbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnitsInRadius_native
 * Signature: (JLbwapi/Position;I)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnitsInRadius_1native
  (JNIEnv *, jobject, jlong, jobject, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getLastError_native
 * Signature: (J)Lbwapi/Error;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getLastError_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    mapFileName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_GameImpl_mapFileName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    mapPathName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_GameImpl_mapPathName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    mapName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_GameImpl_mapName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    mapHash_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_GameImpl_mapHash_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isWalkable_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isWalkable_1native
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    isBuildable_native
 * Signature: (JIIZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isBuildable_1native__JIIZ
  (JNIEnv *, jobject, jlong, jint, jint, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    isBuildable_native
 * Signature: (JLbwapi/TilePosition;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isBuildable_1native__JLbwapi_TilePosition_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    isVisible_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isVisible_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    isVisible_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isVisible_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    isExplored_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isExplored_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    isExplored_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isExplored_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasCreep_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasCreep_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasCreep_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasCreep_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPower_native
 * Signature: (JIILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPower_1native__JIILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPower_native
 * Signature: (JLbwapi/TilePosition;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPower_1native__JLbwapi_TilePosition_2Lbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPower_native
 * Signature: (JIIIILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPower_1native__JIIIILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPower_native
 * Signature: (JLbwapi/TilePosition;IILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPower_1native__JLbwapi_TilePosition_2IILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPowerPrecise_native
 * Signature: (JIILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPowerPrecise_1native__JIILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPowerPrecise_native
 * Signature: (JLbwapi/Position;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPowerPrecise_1native__JLbwapi_Position_2Lbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    canBuildHere_native
 * Signature: (JLbwapi/Unit;Lbwapi/TilePosition;Lbwapi/UnitType;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_canBuildHere_1native
  (JNIEnv *, jobject, jlong, jobject, jobject, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    canMake_native
 * Signature: (JLbwapi/Unit;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_canMake_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    canResearch_native
 * Signature: (JLbwapi/Unit;Lbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_canResearch_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    canUpgrade_native
 * Signature: (JLbwapi/Unit;Lbwapi/UpgradeType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_canUpgrade_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getStartLocations_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getStartLocations_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    printf_native
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_printf_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    sendText_native
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_sendText_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    sendTextEx_native
 * Signature: (JZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_sendTextEx_1native
  (JNIEnv *, jobject, jlong, jboolean, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    changeRace_native
 * Signature: (JLbwapi/Race;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_changeRace_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    isInGame_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isInGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isMultiplayer_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isMultiplayer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isBattleNet_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isBattleNet_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isPaused_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isPaused_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isReplay_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isReplay_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    startGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_startGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    pauseGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_pauseGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    resumeGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_resumeGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    leaveGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_leaveGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    restartGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_restartGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setLocalSpeed_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setLocalSpeed_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    issueCommand_native
 * Signature: (JLjava/util/List;Lbwapi/UnitCommand;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_issueCommand_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    self_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_self_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    enemy_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_enemy_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    neutral_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_neutral_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setTextSize_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setTextSize_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawText_native
 * Signature: (JIIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawText_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTextMap_native
 * Signature: (JIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTextMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTextMouse_native
 * Signature: (JIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTextMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTextScreen_native
 * Signature: (JIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTextScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawBox_native
 * Signature: (JIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawBox_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawBoxMap_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawBoxMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawBoxMouse_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawBoxMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawBoxScreen_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawBoxScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTriangle_native
 * Signature: (JIIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTriangle_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTriangleMap_native
 * Signature: (JIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTriangleMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTriangleMouse_native
 * Signature: (JIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTriangleMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTriangleScreen_native
 * Signature: (JIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTriangleScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawCircle_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawCircle_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawCircleMap_native
 * Signature: (JIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawCircleMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawCircleMouse_native
 * Signature: (JIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawCircleMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawCircleScreen_native
 * Signature: (JIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawCircleScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawEllipse_native
 * Signature: (JIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawEllipse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawEllipseMap_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawEllipseMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawEllipseMouse_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawEllipseMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawEllipseScreen_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawEllipseScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawDot_native
 * Signature: (JIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawDot_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawDotMap_native
 * Signature: (JIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawDotMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawDotMouse_native
 * Signature: (JIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawDotMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawDotScreen_native
 * Signature: (JIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawDotScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawLine_native
 * Signature: (JIIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawLine_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawLineMap_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawLineMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawLineMouse_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawLineMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawLineScreen_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawLineScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getScreenBuffer_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_getScreenBuffer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isDebug_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isDebug_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isLatComEnabled_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isLatComEnabled_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setLatCom_native
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setLatCom_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    isGUIEnabled_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isGUIEnabled_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setGUI_native
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setGUI_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    setMap_native
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setMap_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    setFrameSkip_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setFrameSkip_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPath_native
 * Signature: (JLbwapi/Position;Lbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPath_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    setAlliance_native
 * Signature: (JLbwapi/Player;ZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setAlliance_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    setVision_native
 * Signature: (JLbwapi/Player;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setVision_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    setCommandOptimizationLevel_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setCommandOptimizationLevel_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getLastEventTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getLastEventTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setReplayVision_native
 * Signature: (JLbwapi/Player;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setReplayVision_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    setRevealAll_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setRevealAll_1native
  (JNIEnv *, jobject, jlong, jboolean);

#ifdef __cplusplus
}
#endif
#endif
